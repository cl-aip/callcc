PS C:\Users\seiji\common-lisp\callcc> ls

    Directory: C:\Users\seiji\common-lisp\callcc

Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a---          2022/11/14    13:17            276 callcc.asd     
-a---          2022/11/14    13:36           5247 callcc.lisp    
-a---          2022/09/23    12:51           4757 callcc.lpr     
-a---          2022/11/14    13:29            647 callccdemo1.txt
-a---          2022/11/14    13:41           1935 callccdemo2.txt
-a---          2022/09/23    12:51            135 package.lisp   

PS C:\Users\seiji\common-lisp\callcc> sbcl -callcc.asd
This is SBCL 2.2.8, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
CL-USER(1): (asdf:load-system :callcc)

T
CL-USER(2): (in-package :callcc)                    

#<PACKAGE "CALLCC">
CALLCC(3): (=defun two-numbers ()
             (choose-bind n1 '(0 1 2 3 4 5)
                (choose-bind n2 '(0 1 2 3 4 5)
                   (=values n1 n2))))

=TWO-NUMBERS
CALLCC(4): (=defun parlor-trick (sum)
             (=bind (n1 n2) (two-numbers)
               (if (= (+ n1 n2) sum)
                   `(The sum of ,n1 ,n2)
                 (fail))))
; in: =DEFUN PARLOR-TRICK
;     (SB-INT:NAMED-LAMBDA CALLCC::=PARLOR-TRICK
;         (CALLCC::-CONT- CALLCC::SUM)
;       (BLOCK CALLCC::=PARLOR-TRICK
;         (CALLCC:=BIND (CALLCC::N1 CALLCC::N2)
;             (CALLCC::TWO-NUMBERS)
;           (IF (= # CALLCC::SUM)
;               `(THE CALLCC::SUM CALLCC::OF ,CALLCC::N1 ,CALLCC::N2)
;               (CALLCC:FAIL)))))
;
; caught STYLE-WARNING:
;   The variable -CONT- is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

=PARLOR-TRICK
CALLCC(5): (parlor-trick 7)

Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
Failed.
(THE SUM OF 2 5)
CALLCC(6):